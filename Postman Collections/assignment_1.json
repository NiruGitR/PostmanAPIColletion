{
	"info": {
		"_postman_id": "8fe6dc86-a6fc-4005-8986-c533ed461db0",
		"name": "Swagger Petstore",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "{petId}",
					"item": [
						{
							"name": "uploadImage",
							"item": [
								{
									"name": "uploads an image",
									"id": "203b9c55-01ba-4424-9724-92a3fb37d51c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": {
												"scope": "read:pets write:pets",
												"authUrl": "https://petstore.swagger.io/oauth/authorize",
												"grant_type": "implicit"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"description": "Additional data to pass to server",
													"key": "additionalMetadata",
													"value": "<string>",
													"type": "text"
												},
												{
													"description": "file to upload",
													"key": "file",
													"value": "<string>",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId/uploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId",
												"uploadImage"
											],
											"variable": [
												{
													"id": "3c999f8d-ac4b-4fc1-8602-9e550ad67802",
													"key": "petId",
													"value": "<long>"
												}
											]
										}
									},
									"response": [
										{
											"id": "b6ca4551-bb81-4d2c-8313-63b3a29ce84c",
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "Additional data to pass to server",
															"key": "additionalMetadata",
															"value": "<string>",
															"type": "text"
														},
														{
															"description": "file to upload",
															"key": "file",
															"value": "<string>",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/pet/:petId/uploadImage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId",
														"uploadImage"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"code\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "a576912c-8503-4b33-be43-da95d9fbae27"
						},
						{
							"name": "Find pet by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "447e8f36-fa7c-4264-b14f-588ebcdb0703",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b2da7335-1b19-4691-b9b8-540c6cd71e2d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"key": "api_key",
										"value": "{{apiKey}}",
										"in": "header"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "2"
										}
									]
								},
								"description": "Returns a single pet"
							},
							"response": [
								{
									"id": "7a1646b3-e405-48b4-b37a-403dad676bff",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api_key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}"
								},
								{
									"id": "f74c7477-a506-435b-b137-1031e75bc677",
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api_key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "a7c4405d-c294-4d42-8073-66a54983ad6b",
									"name": "Pet not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api_key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Updates a pet in the store with form data",
							"id": "4bb5e00d-ac39-4044-a4ec-1999964a2bc6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": {
										"scope": "read:pets write:pets",
										"authUrl": "https://petstore.swagger.io/oauth/authorize",
										"grant_type": "implicit"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"description": "Updated name of the pet",
											"key": "name",
											"value": "<string>"
										},
										{
											"description": "Updated status of the pet",
											"key": "status",
											"value": "<string>"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"id": "c3dd9a49-6cdd-4e2a-9ed9-0148ad435e19",
											"key": "petId",
											"value": "<long>"
										}
									]
								}
							},
							"response": [
								{
									"id": "8b51cac2-747b-4a31-8ae0-63b6e1a8134b",
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"description": "Updated name of the pet",
													"key": "name",
													"value": "<string>"
												},
												{
													"description": "Updated status of the pet",
													"key": "status",
													"value": "<string>"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Deletes a pet",
							"id": "cfef04b0-f560-40a2-84d2-a62050344949",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": {
										"scope": "read:pets write:pets",
										"authUrl": "https://petstore.swagger.io/oauth/authorize",
										"grant_type": "implicit"
									}
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api_key",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"id": "367f1eb1-e387-4ea7-9642-e66e2046919e",
											"key": "petId",
											"value": "<long>"
										}
									]
								}
							},
							"response": [
								{
									"id": "60ac61f2-623d-4a68-9a57-c4739d5a55c3",
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "f0eab93d-abc6-42bd-a00f-222182e7508e",
									"name": "Pet not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "7ef0ebfb-9d66-4e7f-95bb-a79403844199"
				},
				{
					"name": "findByStatus",
					"item": [
						{
							"name": "Finds Pets by status",
							"id": "6092c330-232c-4073-a694-8060079c144a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": {
										"scope": "read:pets write:pets",
										"authUrl": "https://petstore.swagger.io/oauth/authorize",
										"grant_type": "implicit"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=pending&status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "pending",
											"description": "(Required) Status values that need to be considered for filter"
										},
										{
											"key": "status",
											"value": "pending",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"response": [
								{
									"id": "4773d1f9-a8c5-45cc-b2bd-157af8dfd5bf",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"description": "(Required) Status values that need to be considered for filter",
													"key": "status",
													"value": "available"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"sold\"\n  }\n]"
								},
								{
									"id": "c659bf5a-8927-470b-bd8c-fb6d1b112fa3",
									"name": "Invalid status value",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"description": "(Required) Status values that need to be considered for filter",
													"key": "status",
													"value": "available"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "6db72317-5527-4804-9677-fa006e781574"
				},
				{
					"name": "findByTags",
					"item": [
						{
							"name": "Finds Pets by tags",
							"id": "51bec498-8b68-4cd2-b02d-bd5bb52b0613",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": {
										"scope": "read:pets write:pets",
										"authUrl": "https://petstore.swagger.io/oauth/authorize",
										"grant_type": "implicit"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"description": "(Required) Tags to filter by",
											"key": "tags",
											"value": "<string>"
										},
										{
											"description": "(Required) Tags to filter by",
											"key": "tags",
											"value": "<string>"
										}
									]
								},
								"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
							},
							"response": [
								{
									"id": "54bdc97b-e0fc-48f3-b7c1-1d6883868a6e",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"description": "(Required) Tags to filter by",
													"key": "tags",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"available\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"sold\"\n  }\n]"
								},
								{
									"id": "88835f3a-4174-45d7-95f1-b674c36826bf",
									"name": "Invalid tag value",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"description": "(Required) Tags to filter by",
													"key": "tags",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "56ed8349-4e23-4a96-9a62-f92c68345fb1"
				},
				{
					"name": "Add a new pet to the store",
					"id": "a016b7b7-6322-4f42-a726-b2fe0bf7b26a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": {
								"scope": "read:pets write:pets",
								"authUrl": "https://petstore.swagger.io/oauth/authorize",
								"grant_type": "implicit"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/pet"
					},
					"response": [
						{
							"id": "d4c851f1-c011-4f84-bbd5-6cf0f77284e5",
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/pet"
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				},
				{
					"name": "Update an existing pet",
					"id": "4becf35f-88c4-4407-b36e-65d583d17e55",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": {
								"scope": "read:pets write:pets",
								"authUrl": "https://petstore.swagger.io/oauth/authorize",
								"grant_type": "implicit"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/pet"
					},
					"response": [
						{
							"id": "aaab82af-6bd5-43f8-a04e-95e69ca4dfbc",
							"name": "Invalid ID supplied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/pet"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "4d17dc3c-37fe-4539-99c0-2f28a0b44777",
							"name": "Pet not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/pet"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						},
						{
							"id": "37546b13-d478-4efd-9d73-abeefc4e1b7f",
							"name": "Validation exception",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/pet"
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				}
			],
			"id": "ab495cc9-c3dd-4c08-880d-67db13fccf78"
		},
		{
			"name": "store",
			"item": [
				{
					"name": "order",
					"item": [
						{
							"name": "{orderId}",
							"item": [
								{
									"name": "Find purchase order by ID",
									"id": "b2dcf57a-d0f4-48d5-96a1-c580c770f6a3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"id": "6a94719f-9db0-4421-ab2a-8ffec9407ba5",
													"key": "orderId",
													"value": "<long>"
												}
											]
										},
										"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
									},
									"response": [
										{
											"id": "c83c133b-2371-4af9-a3cc-5334749b7749",
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"placed\",\n  \"complete\": \"<boolean>\"\n}"
										},
										{
											"id": "1c97b81c-611e-4506-8541-0bdf643fd6df",
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "93137427-d1b6-4795-9547-41c8aec7c8c2",
											"name": "Order not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Delete purchase order by ID",
									"id": "aeb8f139-0950-47b6-a148-ae13c224f847",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"id": "1c731800-21da-4e11-b0e8-6f7cba792946",
													"key": "orderId",
													"value": "<long>"
												}
											]
										},
										"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
									},
									"response": [
										{
											"id": "c358a359-7719-4523-a7c6-e31264a8d2e7",
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "d393b101-3a68-4322-a6d9-7aad4d59d09a",
											"name": "Order not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "7b215a73-5146-4114-881b-5abc30e830ff"
						},
						{
							"name": "Place an order for a pet",
							"id": "12625314-99b2-4b9b-aca3-6840c814b168",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"placed\",\n  \"complete\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/store/order"
							},
							"response": [
								{
									"id": "24a4dc77-49b8-4498-ae27-f6586894021b",
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"placed\",\n  \"complete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/store/order"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"placed\",\n  \"complete\": \"<boolean>\"\n}"
								},
								{
									"id": "de197138-7eda-4cb6-85e2-3605b5689e2a",
									"name": "Invalid Order",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"placed\",\n  \"complete\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/store/order"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "c78f7011-6933-4928-9f73-7f9385c3ff39"
				},
				{
					"name": "inventory",
					"item": [
						{
							"name": "Returns pet inventories by status",
							"id": "b3a442be-3239-4791-828b-5635c05f2419",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": {
										"key": "api_key",
										"value": "{{apiKey}}",
										"in": "header"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/store/inventory",
								"description": "Returns a map of status codes to quantities"
							},
							"response": [
								{
									"id": "9efb1bdb-5cfb-413f-8de3-a7aedb7a6c67",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api_key",
												"value": "<API Key>"
											}
										],
										"url": "{{baseUrl}}/store/inventory"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"consequatf0d\": \"<integer>\",\n  \"ex_9b\": \"<integer>\"\n}"
								}
							]
						}
					],
					"id": "2a8673fa-31ee-4f73-9928-a7b99e577cde"
				}
			],
			"id": "1c0922de-82e0-4481-84d1-259f1fce4bab"
		},
		{
			"name": "user",
			"item": [
				{
					"name": "createWithArray",
					"item": [
						{
							"name": "Creates list of users with given input array",
							"id": "76fd3cbe-b19c-4065-b583-8d8b1aeca569",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/user/createWithArray"
							},
							"response": [
								{
									"id": "1f193235-9d41-4cd0-a2c5-86b89a32d118",
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/user/createWithArray"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "bfea89b2-5942-4286-ba39-b944ca6b0c03"
				},
				{
					"name": "createWithList",
					"item": [
						{
							"name": "Creates list of users with given input array",
							"id": "f9b33845-b959-43f6-b9fa-050487f9f24a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/user/createWithList"
							},
							"response": [
								{
									"id": "01869df8-cbcd-41ab-854d-a2d3060e03cb",
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  },\n  {\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/user/createWithList"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "d86d5a06-fa07-4e01-a94f-0fbe678e2565"
				},
				{
					"name": "{username}",
					"item": [
						{
							"name": "Get user by user name",
							"id": "29fb88e3-e486-4538-97dd-884387ab06f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"id": "73d8f021-6e05-4b99-9572-4d183369f329",
											"key": "username",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"id": "446bddfc-41ce-4619-a1ec-5d5a7736a41d",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}"
								},
								{
									"id": "1157f78c-0275-4c52-a2cc-c9ec9c155c2c",
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "50a730e7-85e6-4319-850b-108238615782",
									"name": "User not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Updated user",
							"id": "b141e878-2896-49c7-bc3a-5c76a4725617",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"id": "af8d6caa-b659-41ea-b4b7-86c2cbfd9f8b",
											"key": "username",
											"value": "<string>"
										}
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"id": "aea307da-4e9a-450c-a879-438d9b261a41",
									"name": "Invalid user supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "70715dfd-fdc8-4090-a0ff-6f752c91dd51",
									"name": "User not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Delete user",
							"id": "9b9dd930-704d-4094-97cf-7ca9bd31959a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"id": "a36ef82c-1c73-4864-94a7-3e59cb6733f9",
											"key": "username",
											"value": "<string>"
										}
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"id": "e0af02d9-8298-4b80-ae46-20be67d22c19",
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								},
								{
									"id": "29a2f444-2242-48d9-87ab-2b28155aa4ca",
									"name": "User not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "3b9a680b-46a9-4ec6-aba1-5f5fae37e2a3"
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Logs user into the system",
							"id": "e7678a4b-f912-4390-8023-e7a3309581dc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"description": "(Required) The user name for login",
											"key": "username",
											"value": "<string>"
										},
										{
											"description": "(Required) The password for login in clear text",
											"key": "password",
											"value": "<string>"
										}
									]
								}
							},
							"response": [
								{
									"id": "adcbf1da-694f-406b-acc2-e5eabe118c69",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"description": "(Required) The user name for login",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) The password for login in clear text",
													"key": "password",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"disabled": false,
											"description": {
												"content": "date in UTC when token expires",
												"type": "text/plain"
											},
											"key": "X-Expires-After",
											"value": "<dateTime>"
										},
										{
											"disabled": false,
											"description": {
												"content": "calls per hour allowed by the user",
												"type": "text/plain"
											},
											"key": "X-Rate-Limit",
											"value": "<integer>"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "<string>"
								},
								{
									"id": "c903ceb9-3c58-466e-8b8e-52106d104805",
									"name": "Invalid username/password supplied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/login?username=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"description": "(Required) The user name for login",
													"key": "username",
													"value": "<string>"
												},
												{
													"description": "(Required) The password for login in clear text",
													"key": "password",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "760771ee-9411-459e-ae6b-32c58a1058d9"
				},
				{
					"name": "logout",
					"item": [
						{
							"name": "Logs out current logged in user session",
							"id": "d669bb42-6a7b-4625-9194-1b7bb941e79f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/user/logout"
							},
							"response": [
								{
									"id": "48988c6b-b7cf-4c0c-87f1-e91c53a994b4",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/user/logout"
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "e52de0dd-d7ef-4872-879e-b757eb81d074"
				},
				{
					"name": "Create user",
					"id": "88456026-3c61-468a-adff-be08e6950416",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/user",
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"id": "8fc37a10-e6e8-4236-8337-76a4d2996067",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<long>\",\n  \"username\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"password\": \"<string>\",\n  \"phone\": \"<string>\",\n  \"userStatus\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/user"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"responseTime": null,
							"body": ""
						}
					]
				}
			],
			"id": "05c02871-4034-4905-b0a1-fa815f2ea383"
		}
	],
	"variable": [
		{
			"id": "4c05a7da-985e-4dd0-9bd8-103043bd2924",
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2"
		}
	]
}